//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data.Entity;
using System.ComponentModel.DataAnnotations.Schema;

namespace Smart.Sample.Core.Context
{
    /// <summary>
    /// DbContext 基础类
    /// </summary>
    internal partial class SampleDbContext : Smart.Data.EF.EFDbContext
	{
		#region DbSet
		/// <summary>
		/// 角色
		/// </summary>
		public virtual DbSet<Entites.Role> Role { get; set; }
		/// <summary>
		/// 角色权限关联
		/// </summary>
		public virtual DbSet<Entites.RoleSysAction> RoleSysAction { get; set; }
		/// <summary>
		/// 操作权限
		/// </summary>
		public virtual DbSet<Entites.SysAction> SysAction { get; set; }
		/// <summary>
		/// 系统功能
		/// </summary>
		public virtual DbSet<Entites.SysFunc> SysFunc { get; set; }
		/// <summary>
		/// 系统用户
		/// </summary>
		public virtual DbSet<Entites.SysUser> SysUser { get; set; }
		/// <summary>
		/// 用户角色
		/// </summary>
		public virtual DbSet<Entites.UserRole> UserRole { get; set; }
	
        #endregion

		protected void BuilderPrimaryKey(DbModelBuilder modelBuilder)
		{
            modelBuilder.Entity<Entites.Role>().HasKey(m => m.RoleId);
            modelBuilder.Entity<Entites.Role>().Property(m => m.RoleId).HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            modelBuilder.Entity<Entites.RoleSysAction>().HasKey(m => m.RoleSysActionId);
            modelBuilder.Entity<Entites.RoleSysAction>().Property(m => m.RoleSysActionId).HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            modelBuilder.Entity<Entites.SysAction>().HasKey(m => m.SysActionId);
            modelBuilder.Entity<Entites.SysFunc>().HasKey(m => m.SysFuncId);
            modelBuilder.Entity<Entites.SysUser>().HasKey(m => m.SysUserId);
            modelBuilder.Entity<Entites.SysUser>().Property(m => m.SysUserId).HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            modelBuilder.Entity<Entites.UserRole>().HasKey(m => m.UserRoleId);
            modelBuilder.Entity<Entites.UserRole>().Property(m => m.UserRoleId).HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);

		}
	}
}
