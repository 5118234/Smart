@model YQ.Cashier.Domain.DTOs.EmployeeInfo
@{
    Layout = "~/Views/Shared/_BasicListPage.cshtml";
    ViewBag.Title = "Employees";
    ViewBag.GetListUrl = "/Employee/GetEmployees";
    ViewBag.SaveUrl = "/Employee/SaveEmployee";
    ViewBag.DeleteUrl = "/Employee/DeleteEmployee";
}

@section form{
    <link href="~/Assets/css/bootstrap/bootstrap-timepicker.min.css" rel="stylesheet" />
    <form class="form-horizontal" id="editform">
        <div class="form-group">
            <label for="Name" class="col-xs-12 col-sm-3 control-label no-padding-right">@this.T("Employee name")</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.TextBoxFor(m => m.Employee.Name, new { @class = "width-100" })
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Employee.Name)
        </div>
        <div class="form-group">
            <label for="JobNumber" class="col-xs-12 col-sm-3 control-label no-padding-right">Job number</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.TextBoxFor(m => m.Employee.JobNumber, new { @class = "width-100" })
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Employee.JobNumber)
        </div>
        <div class="form-group">
            <label for="Sex" class="col-xs-12 col-sm-3 control-label no-padding-right">Sex</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    <select id="Sex" name="Sex">
                        <option value="1">Male</option>
                        <option value="2">Female</option>
                    </select>
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Employee.Sex)
        </div>
        <div class="form-group">
            <label for="Birthday" class="col-xs-12 col-sm-3 control-label no-padding-right">Birthday</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.TextBoxFor(m => m.Employee.Birthday, new { @class = "width-100" })
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Employee.Birthday)
        </div>
        <div class="form-group">
            <label for="Phone" class="col-xs-12 col-sm-3 control-label no-padding-right">Phone</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.TextBoxFor(m => m.Employee.Phone, new { @class = "width-100" })
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Employee.Phone)
        </div>
        <div class="form-group">
            <label for="SalaryTypeID" class="col-xs-12 col-sm-3 control-label no-padding-right">Salary type</label>
            <div class="col-xs-12 col-sm-5">
                @Html.DropDownListFor(m => m.Employee.SalaryTypeID, new SelectList(ViewBag.SalaryTypes, "SalaryTypeId", "Name"))
            </div>
            @Html.ValidationMessageFor(m => m.Employee.SalaryTypeID)
        </div>
        <div class="form-group">
            <label for="Salary" class="col-xs-12 col-sm-3 control-label no-padding-right">Salary</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.TextBoxFor(m => m.Employee.Salary, new { @class = "width-100" })
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Employee.Salary)
        </div>
        <div class="form-group">
            <label for="Subsidy" class="col-xs-12 col-sm-3 control-label no-padding-right">Subsidy</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.TextBoxFor(m => m.Employee.Subsidy, new { @class = "width-100" })
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Employee.Subsidy)
        </div>
        <div class="form-group">
            <label for="BeautySalonId" class="col-xs-12 col-sm-3 control-label no-padding-right">Store</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.DropDownListFor(p => p.Employee.BeautySalonId, new SelectList(ViewBag.Salons as System.Collections.IEnumerable, "BeautySalonId", "Name"), new { id = "BeautySalonId" })

                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Employee.BeautySalonId)
        </div>
        <div class="form-group">
            <label for="DeptmentId" class="col-xs-12 col-sm-3 control-label no-padding-right">Deptment</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.DropDownListFor(p => p.Employee.DeptmentId, new SelectList(ViewBag.Depts as System.Collections.IEnumerable, "SalonDepartmentId", "Name"), new { id = "DeptmentId" })
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Employee.DeptmentId)
        </div>
        <div class="form-group">
            <label for="PositionId" class="col-xs-12 col-sm-3 control-label no-padding-right">Position</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.DropDownListFor(p => p.Employee.PositionId, new SelectList(ViewBag.Jobs as System.Collections.IEnumerable, "PositionId", "Name"))
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Employee.PositionId)
        </div>
        <div class="form-group">
            <label for="Interval" class="col-xs-12 col-sm-3 col-md-3 control-label no-padding-right">Reservation Interval</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.TextBoxFor(m => m.Employee.Interval, new { @class = "width-100", id = "Interval" })
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Employee.Interval)
        </div>
        <div class="form-group">
            <label for="OpenTime" class="col-xs-12 col-sm-3 col-md-3 control-label no-padding-right">Open Time</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.TextBoxFor(m => m.Employee.BeginTime, new { @class = "width-100", id = "BeginTime" })
                    <i class="ace-icon fa fa-clock-o green"></i>
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Employee.BeginTime)
        </div>
        <div class="form-group">
            <label for="Address" class="col-xs-12 col-sm-3 col-md-3 control-label no-padding-right">Closing Time</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.TextBoxFor(m => m.Employee.EndTime, new { @class = "width-100", id = "EndTime" })
                    <i class="ace-icon fa fa-clock-o green"></i>
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Employee.EndTime)
        </div>
        <div class="form-group">
            <label for="Status" class="col-xs-12 col-sm-3 control-label no-padding-right">Status</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.EnumDropDownListFor(p => p.Employee.PoliticalStatus, "Please select...", new { @class = "width-100" })
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Employee.PoliticalStatus)
        </div>
        @Html.HiddenFor(m => m.Employee.EmployeeId)
        @Html.HiddenFor(m => m.Employee.BeautySalonId)
        @Html.HiddenFor(m => m.Employee.PoliticalStatus)
        @Html.HiddenFor(m => m.Employee.CreateTime)
        @Html.HiddenFor(m => m.Employee.CreateUserId)
        @Html.HiddenFor(m => m.DepartmentName)
        @Html.HiddenFor(m => m.PositionName)
    </form>
}
@section init_scripts{
    <script>
        var formatOptions = {
            sex: { value: "1:Male;2:Female;9:None" },
            dept: { value: "1:Administrative" },
            job: { value: "1:Hairdresser" },
        };
        window.emptyData=@Html.Raw(new YQ.Cashier.Domain.DTOs.EmployeeInfo()
            .ToJson(nullValue: Newtonsoft.Json.NullValueHandling.Include));
        window.init = function () {
            $LAB.script(js("validate", "datepicker", "timepicker", "spinner")).wait(function () {
                $("#Birthday").datepicker({ autoclose: true });
                $('#BeginTime').timepicker();
                $('#EndTime').timepicker();

                $('#Interval').ace_spinner({ value: 0.5, min: 0.5, max: 1, step: 0.5, on_sides: true, icon_up: 'ace-icon fa fa-plus', icon_down: 'ace-icon fa fa-minus', btn_up_class: 'btn-purple', btn_down_class: 'btn-purple' });
                $("#BeautySalonId").on('change', function (e) {
                    $.post("/BasicData/GetSalonDepts", { salonId: this.value }, function (data) {
                        $('#DeptmentId').empty();
                        if (data) {
                            for (var i = 0; i < data.length; i++) {
                                $("#DeptmentId").append(" <option value='" + data[i].SalonDepartmentId + "'>" + data[i].Name + "</option>")
                            }
                        }
                    })
                })

                $("#Employee_PositionId").on('change', function (e) {
                    var txt = $(this).find("option:checked").text();
                    $("#PositionName").val(txt);
                })

                $("#DeptmentId").on('change', function (e) {
                    var txt = $(this).find("option:checked").text();
                    $("#DepartmentName").val(txt);
                })

                var salonId = $("#BeautySalonId").val();
                $.post("/BasicData/GetSalonDepts", { salonId: salonId }, function (data) {
                    formatOptions.dept = data;
                });
            })
        };
      
        window.colModel = [
            { name: 'act', label: "Actions", index: 'act', width: 160, align: "center", sortable: false },
            { name: 'Employee.Name', label: "Name", width: 120 },
            { name: 'Employee.JobNumber', label: "JobNumber", width: 80 },
            { name: 'Employee.Sex', label: "Sex", width: 80, formatter: "select", editoptions: formatOptions.sex },
            { name: 'Employee.Phone', label: "Phone", width: 120 },
            { name: 'PositionName', label: 'Position', width: 120 },
            { name: 'DepartmentName', label: 'Department', width: 120 },
            { name: 'Employee.DeptmentId', hidden: true },
            { name: 'Employee.PositionId', hidden: true },
            {
                name: 'Employee.Birthday', label: "Birthday", align: "center", formatter: "date",
                ormatoptions: { srcformat: "ISO8601Long", ewformat: "m/d/Y H:i A" },
            },
            {
                name: 'Employee.CreateTime', label: "Creation time", align: "center", formatter: "date",
                formatoptions: { srcformat: 'Y-m-d H:i:s', newformat: 'Y-m-d H:i:s' },
            },
            { name: 'Employee.EmployeeId', hidden: true },
            { name: 'Employee.BeautySalonId', hidden: true },
            { name: 'Employee.Salary', hidden: true },
            { name: 'Employee.SalaryTypeID', hidden: true },
            { name: 'Employee.Subsidy', hidden: true },
            { name: 'Employee.FirstName', hidden: true },
            { name: 'Employee.LastName', hidden: true },
        ];
    </script>
}
