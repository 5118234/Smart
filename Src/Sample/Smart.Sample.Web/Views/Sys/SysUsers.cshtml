@model YQ.Cashier.Domain.Entites.SysUser
@{
    Layout = "~/Views/Shared/_BasicListPage.cshtml";
    ViewBag.Title = "User info";
    ViewBag.GetListUrl = "/sys/GetSysUsers";
    ViewBag.SaveUrl = "/sys/SaveSysUser";
    ViewBag.DeleteUrl = "/sys/DeleteSysUser";
}
@section righttools{
    <select id="State">
        <option value="0">Normal</option>
        <option value="1">Deleted</option>
    </select>
}
@section form{
    <form class="form-horizontal" id="editform">
        <div class="form-group">
            <label for="LoginName" class="col-xs-12 col-sm-3 control-label no-padding-right">Login name</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.TextBoxFor(m => m.LoginName, new { @class = "width-100" })
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.LoginName)
        </div>
        <div class="form-group" id="pwd">
            <label for="Password" class="col-xs-12 col-sm-3 control-label no-padding-right">Password</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.PasswordFor(m => m.Password, new { @class = "width-100" })
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Password)
        </div>
        <div class="form-group">
            <label for="UserName" class="col-xs-12 col-sm-3 control-label no-padding-right">User name</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.TextBoxFor(m => m.UserName, new { @class = "width-100" })
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.UserName)
        </div>
        <div class="form-group">
            <label for="EmployeeId" class="col-xs-12 col-sm-3 control-label no-padding-right">@this.T("Employee")</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    <select class="width-100" id="EmployeeId" name="EmployeeId">
                        @foreach (var item in ViewBag.Employees)
                        {
                            <option value="@item.EmployeeId">@item.Name</option>
                        }
                    </select>
                </span>
            </div>
        </div>
        <div class="form-group">
            <label for="Roles" class="col-xs-12 col-sm-3 control-label no-padding-right">Roles</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right" id="roles">
                    @foreach (var item in ViewBag.Roles)
                    {
                        <label class="inline" title="" data-original-title="@item.Note" data-rel="tooltip" data-placement="bottom">
                            <input type="checkbox" class="ace" name="Roles" value="@item.RoleId" data-text="@item.Name">
                            <span class="lbl"> @item.Name</span>
                        </label>
                    }
                </span>
            </div>
        </div>
        @Html.HiddenFor(m => m.SysUserId)
        @Html.HiddenFor(m => m.LastLoginTime)
    </form>
}
<div class="modal fade" id="pwdmodal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title"><i class="fa fa-key"></i> @this.T("Change password")</h4>
            </div>
            <div class="modal-body">
                <form class="form-horizontal" id="pwdform">
                    <input type="hidden" name="userId" id="userId">
                    <div class="form-group">
                        <label for="oldPassword" class="col-xs-12 col-sm-3 control-label no-padding-right">Old password</label>
                        <div class="col-xs-12 col-sm-5">
                            <span class="block input-icon input-icon-right">
                                <input class="width-100" type="password" name="oldPassword">
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="newPassword" class="col-xs-12 col-sm-3 control-label no-padding-right">New password</label>
                        <div class="col-xs-12 col-sm-5">
                            <span class="block input-icon input-icon-right">
                                <input class="width-100" type="password" name="newPassword">
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="confirmPassword" class="col-xs-12 col-sm-3 control-label no-padding-right">Confirm password</label>
                        <div class="col-xs-12 col-sm-5">
                            <span class="block input-icon input-icon-right">
                                <input class="width-100" type="password" name="confirmPassword">
                            </span>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-sm no-border" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                <button type="button" class="btn btn-primary btn-sm no-border" id="btn_set" data-form="#pwdform">
                    <i class="fa fa-floppy-o"></i> Change
                </button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
@section init_scripts{
    <script>
        window.emptyData=@Html.Raw(new YQ.Cashier.Domain.Entites.SysUser()
            .ToJson(nullValue: Newtonsoft.Json.NullValueHandling.Include));

        window.seaching = function (data) {
            data.state = $("#State").val();
            return data;
        }
        window.onAdd = function () {
            $('#pwd').removeClass('hidden');
        }
        window.onEdit = function (data) {
            $('#pwd').addClass('hidden');
            var roles = data.Roles.split(',');
            var roleIds = [];
            for (var i = 0; i < roles.length; i++) {
                roleIds.push($("#roles [data-text=" + roles[i] + "]").val());
            }
            data.Roles = roleIds.join(',');
            return data;
        }
        window.onSaved = function (action, data) {
            var rowData = $grid.getSelectedRowData();
            data.LastLoginTime=rowData.LastLoginTime;
            data.Roles = [];
            $("#roles :checked").each(function () {
                data.Roles.push($(this).data("text"));
            });
            return data;
        }
        window.colModel = [
                    { name: 'act', label: "Actions",  width: 290, align: "center", sortable: false },
                    { name: 'UserName', label: "User name",  width: 150, align: "center" },
                    { name: 'LoginName', label: "Login name",  width: 120, align: "center" },
                    { name: 'EmployeeId',  hidden: true },
                    { name: 'Roles', label: "Roles",  width: 200, formatter: function (cellvalue) { return cellvalue.join(','); } },
                    {
                        name: 'LastLoginTime', label: "Last login",  align: "center",
                        formatter: "date",formatoptions:{srcformat: 'ISO8601Long', newformat: 'm/d/Y H:i A'},
                    },
                    { name: 'SysUserId', hidden: true },
        ];
        window.gridComplete = function () {
            var ids = $grid.jqGrid('getDataIDs');
            for (var i = 0; i < ids.length; i++) {
                var data = $grid.jqGrid('getRowData', ids[i]);
                if (data.IsSysRole == "true") continue;
                var cl = ids[i];
                var cellData = '';
                cellData += '<button class="btn btn-xs btn-success no-border btn-pwd" type="button" data-rowid="' + cl + '"><i class="fa fa-key"></i>  Change password</button>';
                cellData += '<button class="btn btn-xs btn-primary no-border btn-edit" type="button" data-rowid="' + cl + '"><i class="fa fa-pencil"></i> Edit</button>';
                cellData += '<button class="btn btn-xs btn-danger no-border btn-del" type="button"data-rowid="' + cl + '"><i class="fa fa-close"></i> Delete</button>';
                var ind = $(this).jqGrid('getGridRowById', ids[i]);
                $("td[role='gridcell']:eq(1)", ind).html(cellData);
            }
        }
        $("#State").change(function () {
            var postData = { state: $(this).val(), search: $("#nav-search-input").val() };
            $grid.jqGrid("setGridParam", { postData: postData, page: 1 }).trigger("reloadGrid");
        });
        $("#pwdmodal").modal({ show: false });

        $("#grid_list").on("click", ".btn-pwd", function () {
            $("#userId").val($(this).data("rowid"));
            loadData({ oldPassword: "", newPassword: "", confirmPassword: "" });
            $("#pwdmodal").modal('show');
        });
        submitForm("#btn_set", "/sys/ChangePassword", function (ret) {
            $("#pwdmodal").modal("hide");
        });
        $('[data-rel=tooltip]').tooltip({ container: 'body' });
    </script>
}
