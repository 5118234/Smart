@model YQ.Cashier.Domain.Entites.BeautySalon
@{
    Layout = "~/Views/Shared/_BasicListPage.cshtml";
    ViewBag.Title = "Salon Info";
    ViewBag.GetListUrl = "/BasicData/GetSalonInfos";
    ViewBag.SaveUrl = "/BasicData/SaveSaloninfo";
    ViewBag.DeleteUrl = "/BasicData/DeleteSalonInfo";
}
@section form{
    <link href="~/Assets/css/bootstrap/bootstrap-timepicker.min.css" rel="stylesheet" />
    <form class="form-horizontal" id="editform">
        <div class="form-group">
            <label for="Name" class="col-xs-12 col-sm-3 control-label no-padding-right">@this.T("Name")</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.TextBoxFor(m => m.Name, new { @class = "width-100" })
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Name)
        </div>
        <div class="form-group">
            <label for="ShortName" class="col-xs-12 col-sm-3 control-label no-padding-right">@this.T("ShortName")</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.TextBoxFor(m => m.ShortName, new { @class = "width-100" })
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.ShortName)
        </div>
        <div class="form-group">
            <label for="Code" class="col-xs-12 col-sm-3 control-label no-padding-right">Code</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.TextBoxFor(m => m.Code, new { @class = "width-100" })
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Code)
        </div>
        <div class="form-group">
            <label for="Address" class="col-xs-12 col-sm-3 col-md-3 control-label no-padding-right">Business License</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.TextBoxFor(m => m.BusinessLicence, new { @class = "width-100 " })
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.BusinessLicence)
        </div>
        <div class="form-group">
            <label for="OpeningDate" class="col-xs-12 col-sm-3 col-md-3 control-label no-padding-right">Opening Date</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.TextBoxFor(m => m.OpeningDate, new { @class = "width-100 date-picker" })
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.OpeningDate)
        </div>
        <div class="form-group">
            <label for="Status" class="col-xs-12 col-sm-3 control-label no-padding-right">Status</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.EnumDropDownListFor(p => p.Status, "Please select...", new { @class = "width-100" })
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Status)
        </div>
        <div class="form-group">
            <label for="area" class="col-xs-12 col-sm-3 control-label no-padding-right">Area</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.DropDownList("Province", new SelectList(ViewBag.Province as System.Collections.IEnumerable, "DivisionId", "Name"), "Please select...", new { id = "area" })

                    @Html.DropDownListFor(p => p.DivisionId, new SelectList(Enumerable.Empty<SelectListItem>(), "DivisionId", "Name"), "Please select...", new { id = "a2" })
                </span>
            </div>
            <div class="help-block col-xs-12 col-sm-reset inline"></div>
        </div>
        <div class="form-group">
            <label for="Address" class="col-xs-12 col-sm-3 col-md-3 control-label no-padding-right">Address</label>
            <div class="col-xs-12 col-sm-5">
                <span class="block input-icon input-icon-right">
                    @Html.TextBoxFor(m => m.Address, new { @class = "width-100" })
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Address)
        </div>
        @* <div class="form-group">
                <label for="Phone" class="col-xs-12 col-sm-3 control-label no-padding-right">Phone</label>
                <div class="col-xs-12 col-sm-5">
                    <span class="block input-icon input-icon-right">
                        @Html.TextBoxFor(m => m.Phone, new { @class = "width-100" })
                        <i class="ace-icon fa fa-phone"></i>
                    </span>
                </div>
                @Html.ValidationMessageFor(m => m.Phone)
            </div>
            <div class="form-group">
                <label for="Address" class="col-xs-12 col-sm-3 col-md-3 control-label no-padding-right">Email</label>
                <div class="col-xs-12 col-sm-5">
                    <span class="block input-icon input-icon-right">
                        @Html.TextBoxFor(m => m.Email, new { @class = "width-100" })
                    </span>
                </div>
                @Html.ValidationMessageFor(m => m.Email)
            </div>
            <div class="form-group">
                <label for="Notice" class="col-xs-12 col-sm-3 col-md-3 control-label no-padding-right">Notice</label>
                <div class="col-xs-12 col-sm-5">
                    <span class="block input-icon input-icon-right">
                        @Html.TextBoxFor(m => m.Notice, new { @class = "width-100" })
                    </span>
                </div>
                @Html.ValidationMessageFor(m => m.Notice)
            </div>
            <div class="form-group">
                <label for="OpenTime" class="col-xs-12 col-sm-3 col-md-3 control-label no-padding-right">Open Time</label>
                <div class="col-xs-12 col-sm-5">
                    <span class="block input-icon input-icon-right">
                        @Html.TextBoxFor(m => m.BeginTime, new { @class = "width-100", id = "BeginTime" })
                        <i class="ace-icon fa fa-clock-o green"></i>
                    </span>
                </div>
                @Html.ValidationMessageFor(m => m.BeginTime)
            </div>
            <div class="form-group">
                <label for="Address" class="col-xs-12 col-sm-3 col-md-3 control-label no-padding-right">Closing Time</label>
                <div class="col-xs-12 col-sm-5">
                    <span class="block input-icon input-icon-right">
                        @Html.TextBoxFor(m => m.EndTime, new { @class = "width-100", id = "EndTime" })
                        <i class="ace-icon fa fa-clock-o green"></i>
                    </span>
                </div>
                @Html.ValidationMessageFor(m => m.EndTime)
            </div>
            <div class="form-group">
                <label for="Interval" class="col-xs-12 col-sm-3 col-md-3 control-label no-padding-right">Reservation Interval</label>
                <div class="col-xs-12 col-sm-5">
                    <span class="block input-icon input-icon-right">
                        @Html.TextBoxFor(m => m.Interval, new { @class = "width-100", id = "Interval" })
                    </span>
                </div>
                @Html.ValidationMessageFor(m => m.Interval)
            </div>

            <div class="form-group">
                <label for="AheadHour" class="col-xs-12 col-sm-3 col-md-3 control-label no-padding-right">Ahead Timespan</label>
                <div class="col-xs-12 col-sm-5">
                    <span class="block input-icon input-icon-right">
                        @Html.TextBoxFor(m => m.AheadHour, new { @class = "width-100", id = "AheadHour" })
                    </span>
                </div>
                @Html.ValidationMessageFor(m => m.AheadHour)
            </div><div class="form-group">
                <label for="HeadPhoto" class="col-xs-12 col-sm-3 control-label no-padding-right">Image</label>
                <div class="col-xs-12 col-sm-5">
                    <span class="block input-icon input-icon-right">
                        <label class="ace-file-input">
                            @Html.TextBoxFor(p => p.HeadPhoto, new { @type = "file", id = "HeadPhoto" })
                            <span class="ace-file-container" data-title="Choose">
                                <span class="ace-file-name" data-title="No File ...">
                                    <i class="ace-icon fa fa-upload"></i>
                                </span>
                            </span>
                            <a class="remove" href="#">
                                <i class="ace-icon fa fa-times"></i>
                            </a>
                        </label>
                    </span>
                </div>
                @Html.ValidationMessageFor(m => m.HeadPhoto)
            </div>*@

        @Html.HiddenFor(m => m.BeautySalonId)
        @Html.HiddenFor(m => m.CreateTime)
        @Html.HiddenFor(m => m.CreateUserId)
        @Html.HiddenFor(m => m.MergeName)
    </form>
}
@section init_scripts{

    <script>
        $LAB.script(js("validate", "datepicker", "timepicker", "spinner")).wait(function () {
            $("#area").on('change', function (e) {
                var valueSelected = this.value;
                $.post("/BasicData/GetCities", { provinceId: valueSelected }, function (data) {
                    $('#a2 option:gt(0)').remove();
                    if (data) {
                        for (var i = 0; i < data.length; i++) {
                            $("#a2").append(" <option value='" + data[i].DivisionId + "' mergename='"+ data[i].MergeName +"'>" + data[i].Name + "</option>")
                        }
                    }
                })
            })
            $("#a2").on('change',function(e){
                var name = $("#a2 option:selected").attr('mergename');
                $("#MergeName").val(name);
            })
            $('.date-picker').datepicker({
                autoclose: true,
                todayHighlight: true
            });
            $('#BeginTime').timepicker();
            $('#EndTime').timepicker();
            $('#AheadHour').ace_spinner({ value: 0, min: 0, max: 12, step: 0.5, on_sides: true, icon_up: 'ace-icon fa fa-plus', icon_down: 'ace-icon fa fa-minus', btn_up_class: 'btn-purple', btn_down_class: 'btn-purple' });
            $('#Interval').ace_spinner({ value: 0.5, min: 0.5, max: 1, step: 0.5, on_sides: true, icon_up: 'ace-icon fa fa-plus', icon_down: 'ace-icon fa fa-minus', btn_up_class: 'btn-purple', btn_down_class: 'btn-purple' });

            //$('#HeadPhoto').ace_file_input({
            //    no_file:'No File ...',
            //    btn_choose:'Choose',
            //    btn_change:'Change',
            //    droppable:false,
            //    onchange:null,
            //    thumbnail:false, //| true | large
            //    whitelist:'gif|png|jpg|jpeg'
            //    //blacklist:'exe|php'
            //    //onchange:''
            //    //
            //});

            window.emptyData=@Html.Raw(new YQ.Cashier.Domain.Entites.BeautySalon()
                   .ToJson(nullValue: Newtonsoft.Json.NullValueHandling.Include));
            window.emptyData.OpeningDate='@DateTime.Today.ToShortDateString()';
            window.colModel = [
                { name: 'act', label: "Actions", index: 'act', width: 160, align: "center", sortable: false },
                { name: 'Name', label: "Name", width: 120 },
                { name: 'ShortName', label: "ShortName", width: 80 },
                { name: 'Code', label: "Code",width:80 },
                { name: 'Phone', label: "Phone", width: 120 },
                { name: 'Address', label: "Address", width: 120 },
                { name: 'DivisionId', hidden:true },
                { name: 'MergeName',label:"Area",width:120},
                { name: 'Email', label: "Email", width: 120 },
                { name: 'Notice', label: "Notice", width: 120 },
                { name: 'BeginTime', label: "BusinessTime", width:120
                    //cellattr: function(rowId,value,rowObject,colModel,arrData){
                    //    return ' colspan=2';
                    //},
                    //formatter:function(value,options,rData){
                    //    return value + "-" + rData['EndTime'];
                    //},
                    //unformatter:function(value,option,cell){
                    //    cell.text().
                    //}
                },
                { name: 'EndTime', label:'CloseTime',width:120
                    //cellattr:function(rowId,value,rowObject,colModel,arrData){
                    //return ' style=display:none;';
                    //}
                },
                { name: 'Interval', label: "Interval", width:80 },
                {name:'AheadHour',label:"Ahead Hour",width:80},
                {name:'BusinessLicence',label:"License",width:120},
                {
                    name: 'OpeningDate', label: "Creation time", align:  "center", formatter: "date",
                    formatoptions: { srcformat: "ISO8601Long", ewformat: "m/d/Y H:i A" },
                },
                { name: 'Status', label: "Status", width: 80 },
                { name:'BeautySalonId',hidden:true},
                {name:'CreateTime',hidden:true},
                {name:'CreateUserId',hidden:true}
            ];
        });
    </script>
}