@{
    ViewBag.Title = "Cusotmers";
}
<div class="modal-dialog modal-lg">
    <div class="modal-content" id="customer-modalcontent">
        <div class="modal-header">
            @this.T("Customers")
        </div>
        <div class="modal-body" style="padding-left:4px;padding-right:4px">
            <table id="customer_list"></table>
            <div id="customer_list_pager"></div>
        </div>
        <div class="modal-footer">
            <button class="btn btn-danger btn-sm pull-left" data-dismiss="modal">
                <i class="ace-icon fa fa-times"></i> Cancel
            </button>
        </div>

    </div>

</div>
<script>
    var formatOptions = {
        sex: { value: "1:Male;2:Female;9:None" }
    };
    window.emptyData=@Html.Raw(new YQ.Cashier.Domain.DTOs.CustomerInfo()
                   .ToJson(nullValue: Newtonsoft.Json.NullValueHandling.Include));
    $("#customer_list").jqGrid("searchGrid", { multipleSearch: true }).jqGrid({
        url: "/Cashier/CustomerSearch",
        datatype: "json",
        mtype: 'Post',
        colNames: ['Name', "Sex", "Phone", "Card No", "Card Type", "Channel", "CustomerId", "ShortName", "FirstName", "LastName", "SalonName", 'Discount', ""],
        colModel: [
            { name: 'Customer.Name', label: "Name", width: 120 },
            { name: 'Customer.Sex', label: "Sex", formatter: "select", editoptions: formatOptions.sex, stype: 'select', searchoptions: formatOptions.sex },
            { name: 'Customer.Phone', label: "Phone", width: 120 },
            { name: 'CardNo', label: "Card No", width: 120 },
            { name: 'CardTypeName', label: "Card Type", width: 120 },
            { name: 'ChannelName', label: "Channel", width: 120 },
            { name: 'Customer.CustomerId', hidden: true },
            { name: 'Customer.ShortName', hidden: true },
            { name: 'Customer.FirstName', hidden: true },
            { name: 'Customer.LastName', hidden: true },
            { name: 'SalonName', hidden: true },
            { name: 'Discount', hidden: true },
            { name: "Select", width: 80, search: false }
        ],
        pager: "#customer_list_pager",
        rowNum: 10,
        rowList: [10, 20, 30],
        emptyrecords: "No records to view",
        autowidth: true,
        loadComplete: function () {
            var $grid = $(this), iCol = getColumnIndexByName($grid, 'Select');
            var ids = $grid.jqGrid('getDataIDs');
            for (var i = 0; i < ids.length; i++) {
                var cl = ids[i];
                var ind = $grid.jqGrid('getGridRowById', ids[i]);
                var cellData = '<button class="btn btn-xs btn-success no-border btn-select" type="button" data-rowid="' + cl + '">Select</button>';
                $("td[role='gridcell']:eq(" + iCol + ")", ind).html(cellData);
            }
            // on 绑定 click事件 触摸屏点击不会有延迟
            $(".btn-select").on("click", function () {
                var selRowId = $(this).data("rowid");
                var rowValue = $grid.jqGrid('getRowData', selRowId);
                var cardno = rowValue['CardNo'] || "";
                if (cardno != "") {
                    $.post("/Cashier/GetVipCardByNo", { cardno: cardno }, function (ret) {
                        if (!ret.error) {
                            $("#CardBalance").text(ret.CardInfo.CardBalance || "");
                            $("#OverdraftBalance").text(ret.CardInfo.OverDraftBalance || "");
                            $("#PresentBalance").text(ret.CardInfo.PresentBalance || "");
                            $("#TotalBalance").text(ret.TotalBalance || "");
                        }
                    })
                }

                $("#FullName").text(rowValue['Customer.Name'] || "");
                $("#PhoneNumber").text(rowValue['Customer.Phone'] || "");
                $("#CardNumber").text(cardno);
                $("#BelongsTo").text(rowValue['SalonName'] || "");
                $("#CardType").text(rowValue['CardTypeName'] || "");
                $("#Discount").text(rowValue['Discount'] || "");
                $("#ChannelType").text(rowValue['ChannelName'] || "");
                $("#customermodal").modal('hide');
            })
        }
    }).jqGrid('filterToolbar', { searchOnEnter: false });
    
    function JqGridSize(container, grid) {
        var width = $(container).width();
        width = width - 4; // Fudge factor to prevent horizontal scrollbars
        if (width > 0 &&
            // Only resize if new width exceeds a minimal threshold
            // Fixes IE issue with in-place resizing when mousing-over frame bars
            Math.abs(width - $(grid).width()) > 5) {
            $(grid).jqGrid('setGridWidth', width);
        }
    }

    $(window).bind('resize', function () {
        JqGridSize("#customer-modalcontent", "#customer_list");
    })

    function getColumnIndexByName(grid, columnName) {
        var cm = grid.jqGrid('getGridParam', 'colModel'), i = 0, l = cm.length;
        for (; i < l; i += 1) {
            if (cm[i].name === columnName) {
                return i; // return the index
            }
        }
        return -1;
    };
</script>
